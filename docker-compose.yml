version: '3'
services:
  frontend_service:
    container_name: frontend_container
    image: frontend_image
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    # ports:
    #   - 3000:3000

  backend_service:
    container_name: backend
    image: backend_image
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env.api.local
    ports:
      - 5000:5000
    restart: on-failure
    volumes:
      - ./backend/logs/api.log:/app/logs/api.log
      - ./backend/matching_analysis:/app/matching_analysis
      - ./backend/job_analysis:/app/job_analysis
      - ./backend/cv_analysis:/app/cv_analysis
    depends_on:
      - db_service
      
  db_service:
    container_name: db_container
    image: postgres:13.3
    env_file:
      - ./backend/.env.db.local
    volumes:
      - postgresql_data:/var/lib/postgresql/data/

  nginx_service:
    container_name: nginx_container
    image: nginx:1.25.1-alpine
    volumes:
      - ./nginx-server/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx-server/log:/var/log/nginx/
      - ./certificates/cache:/etc/nginx/cache
      - ./certificates/ssl:/etc/nginx/ssl
      - ./certificates/ssl/bot:/etc/nginx/ssl/bot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend_service

volumes:
  postgresql_data: